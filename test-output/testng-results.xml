<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="9" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="44" started-at="2017-09-07T21:40:46Z" finished-at="2017-09-07T21:40:46Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="44" started-at="2017-09-07T21:40:46Z" finished-at="2017-09-07T21:40:46Z">
      <class name="assignment1.TestNGDijkstraAlgorithm">
        <test-method status="PASS" signature="prepTest()[pri:0, instance:assignment1.TestNGDijkstraAlgorithm@6d8a00e3]" name="prepTest" is-config="true" duration-ms="6" started-at="2017-09-07T14:40:46Z" finished-at="2017-09-07T14:40:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepTest -->
        <test-method status="PASS" signature="testEmptyNetwork()[pri:10, instance:assignment1.TestNGDijkstraAlgorithm@6d8a00e3]" name="testEmptyNetwork" duration-ms="5" started-at="2017-09-07T14:40:46Z" description="0 nodes, expects infinity" finished-at="2017-09-07T14:40:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyNetwork -->
        <test-method status="PASS" signature="prepTest()[pri:0, instance:assignment1.TestNGDijkstraAlgorithm@6d8a00e3]" name="prepTest" is-config="true" duration-ms="0" started-at="2017-09-07T14:40:46Z" finished-at="2017-09-07T14:40:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepTest -->
        <test-method status="PASS" signature="testOneNetworkSrcNull()[pri:15, instance:assignment1.TestNGDijkstraAlgorithm@6d8a00e3]" name="testOneNetworkSrcNull" duration-ms="1" started-at="2017-09-07T14:40:46Z" description="1 nodes, source = null, expects infinity" finished-at="2017-09-07T14:40:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneNetworkSrcNull -->
        <test-method status="PASS" signature="prepTest()[pri:0, instance:assignment1.TestNGDijkstraAlgorithm@6d8a00e3]" name="prepTest" is-config="true" duration-ms="0" started-at="2017-09-07T14:40:46Z" finished-at="2017-09-07T14:40:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepTest -->
        <test-method status="PASS" signature="testOneNetworkDestNull()[pri:16, instance:assignment1.TestNGDijkstraAlgorithm@6d8a00e3]" name="testOneNetworkDestNull" duration-ms="1" started-at="2017-09-07T14:40:46Z" description="1 nodes, destination = null, expects infinity" finished-at="2017-09-07T14:40:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneNetworkDestNull -->
        <test-method status="PASS" signature="prepTest()[pri:0, instance:assignment1.TestNGDijkstraAlgorithm@6d8a00e3]" name="prepTest" is-config="true" duration-ms="0" started-at="2017-09-07T14:40:46Z" finished-at="2017-09-07T14:40:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepTest -->
        <test-method status="PASS" signature="testOneNetwork()[pri:20, instance:assignment1.TestNGDijkstraAlgorithm@6d8a00e3]" name="testOneNetwork" duration-ms="1" started-at="2017-09-07T14:40:46Z" description="1 nodes, source = destination, expects 0" finished-at="2017-09-07T14:40:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneNetwork -->
        <test-method status="PASS" signature="prepTest()[pri:0, instance:assignment1.TestNGDijkstraAlgorithm@6d8a00e3]" name="prepTest" is-config="true" duration-ms="0" started-at="2017-09-07T14:40:46Z" finished-at="2017-09-07T14:40:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepTest -->
        <test-method status="PASS" signature="testTwoNetwork()[pri:30, instance:assignment1.TestNGDijkstraAlgorithm@6d8a00e3]" name="testTwoNetwork" duration-ms="2" started-at="2017-09-07T14:40:46Z" description="2 nodes, connected, expects 33" finished-at="2017-09-07T14:40:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwoNetwork -->
        <test-method status="PASS" signature="prepTest()[pri:0, instance:assignment1.TestNGDijkstraAlgorithm@6d8a00e3]" name="prepTest" is-config="true" duration-ms="0" started-at="2017-09-07T14:40:46Z" finished-at="2017-09-07T14:40:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepTest -->
        <test-method status="PASS" signature="testSmallNetwork()[pri:40, instance:assignment1.TestNGDijkstraAlgorithm@6d8a00e3]" name="testSmallNetwork" duration-ms="1" started-at="2017-09-07T14:40:46Z" description="5 nodes, connected, expects 87" finished-at="2017-09-07T14:40:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSmallNetwork -->
        <test-method status="PASS" signature="testSmallDiscNetwork()[pri:50, instance:assignment1.TestNGDijkstraAlgorithm@6d8a00e3]" name="testSmallDiscNetwork" duration-ms="1" started-at="2017-09-07T14:40:46Z" description="7 nodes, disconnected, expects infinity" finished-at="2017-09-07T14:40:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSmallDiscNetwork -->
        <test-method status="PASS" signature="prepTest()[pri:0, instance:assignment1.TestNGDijkstraAlgorithm@6d8a00e3]" name="prepTest" is-config="true" duration-ms="0" started-at="2017-09-07T14:40:46Z" finished-at="2017-09-07T14:40:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepTest -->
        <test-method status="PASS" signature="testSmallMultiLinkNetwork()[pri:60, instance:assignment1.TestNGDijkstraAlgorithm@6d8a00e3]" name="testSmallMultiLinkNetwork" duration-ms="1" started-at="2017-09-07T14:40:46Z" description="14 nodes, connected, expects 91" finished-at="2017-09-07T14:40:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSmallMultiLinkNetwork -->
        <test-method status="PASS" signature="prepTest()[pri:0, instance:assignment1.TestNGDijkstraAlgorithm@6d8a00e3]" name="prepTest" is-config="true" duration-ms="0" started-at="2017-09-07T14:40:46Z" finished-at="2017-09-07T14:40:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepTest -->
        <test-method status="PASS" signature="testCrowdedNetwork()[pri:70, instance:assignment1.TestNGDijkstraAlgorithm@6d8a00e3]" name="testCrowdedNetwork" duration-ms="1" started-at="2017-09-07T14:40:46Z" description="33 nodes, connected, expects 161" finished-at="2017-09-07T14:40:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCrowdedNetwork -->
        <test-method status="PASS" signature="prepTest()[pri:0, instance:assignment1.TestNGDijkstraAlgorithm@6d8a00e3]" name="prepTest" is-config="true" duration-ms="0" started-at="2017-09-07T14:40:46Z" finished-at="2017-09-07T14:40:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepTest -->
      </class> <!-- assignment1.TestNGDijkstraAlgorithm -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
